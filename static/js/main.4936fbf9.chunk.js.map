{"version":3,"sources":["components/List.js","components/Create.js","components/Filter.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["List","todoList","filter","changeStatus","removeItem","todo","completed","id","map","index","value","name","className","onClick","Create","props","state","text","this","handleSaveTodo","setState","e","target","type","placeholder","onChange","handleClick","React","Component","Filter","_","defaultChecked","Todo","bind","todos","push","newTodos","item","i","length","countTodoCompleted","handleAddTodo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4936fbf9.chunk.js","sourcesContent":["import React from \"react\";\nimport './List.css';\n\nconst List = ({todoList, filter, changeStatus, removeItem}) => {\n  if (filter === 'COMPLETED') {\n    todoList = todoList.filter(todo => todo.completed);\n  }\n\n  return (\n    (\n      <div>\n        <ul id=\"my-ul\">\n          {todoList.map((todo, index) =>\n            <li value={index} key={index}>\n              {todo.name}\n              <button className=\"list\" onClick={() => removeItem(index) }>\n                Delete\n              </button>\n              <button className=\"list\" onClick={() => changeStatus(index) }>\n                Complete\n              </button>\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  );\n}\n\nexport default List;\n","import React from \"react\";\n\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {text: ''};\n  }\n\n    handleSaveTodo() {\n      this.props.handleSaveTodo(this.state.text);\n      this.setState({\n        text: '',\n      })\n    }\n    handleClick(e) {\n      this.setState({\n        text: e.target.value\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                <input\n                    name=\"todo\"\n                    type=\"text\"\n                    id=\"my-input\"\n                    placeholder=\"Enter todo you want...\"\n                    value={this.state.text}\n                    onChange={e => {this.handleClick(e)}}\n                />\n                <span className=\"add-btn\" onClick={() => { this.handleSaveTodo() }}>Add</span>\n            </div>\n        )\n    }\n}\n\nexport default Create;\n","import React from \"react\";\nimport './List.css';\n\nconst Filter = ({onClick}) => (\n  <div>\n    <div className=\"radio-checkbox\">\n      <div className=\"todo_checkbox\">\n        <label className=\"radio-inline\" ><input type=\"radio\" onClick={_ => onClick('ALL')} name=\"optradio\" defaultChecked=\"true\"/>ALL</label>\n      </div>\n      <div>\n      <label className=\"radio-inline\" ><input type=\"radio\" onClick={_ => onClick('COMPLETED')} name=\"optradio\" />COMPLETED</label>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport List from \"./List\"\nimport Create from \"./Create\"\nimport Filter from \"./Filter\"\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoList: [\n                {id: 1, name: 'test1', completed: true},\n                {id: 2, name: 'test2', completed: true},\n                {id: 3, name: 'test3', completed: false},\n                {id: 4, name: 'test4', completed: true},\n                {id: 5, name: 'test5', completed: false},\n            ],\n          filter: 'ALL'\n        }\n      this.removeItem = this.removeItem.bind(this);\n      this.changeStatus = this.changeStatus.bind(this);\n      this.filter = this.filter.bind(this);\n    }\n    handleAddTodo(text) {\n        const todos = this.state.todoList;\n        todos.push({\n            name: text,\n            completed: false,\n        });\n\n        this.setState({\n          todoList: todos,\n        });\n    }\n\n    removeItem(index) {\n        let newTodos = this.state.todoList.filter((item, i) => i !== index);\n        this.setState({\n          todoList: newTodos\n        });\n    }\n\n    changeStatus(index) {\n      const todos = this.state.todoList;\n        let todo = todos[index];\n        todo.completed = !todo.completed;\n        todos[index] = todo;\n        this.setState({todos});\n    }\n\n    filter(value) {\n      this.setState({\n        filter: value\n      })\n    }\n\n    countTodoCompleted() {\n        let todoList = this.state.todoList;\n        return todoList.filter(todo => todo.completed).length;\n    }\n    render () {\n      return (\n        <div>\n          <div id=\"my-div\" className=\"header\">\n            <h2>Have {this.countTodoCompleted()} todo list</h2>\n            <Create handleSaveTodo={text => {this.handleAddTodo(text)}} />\n          </div>\n          <Filter onClick={value => this.filter(value)} />\n\n          <List todoList={this.state.todoList} filter={this.state.filter} changeStatus={this.changeStatus} removeItem={this.removeItem}/>\n        </div>\n      )\n    }\n}\n\nexport default Todo;\n","// import logo from './logo.svg';\nimport './App.css';\nimport Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n      <Todo />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}